---
import BaseLayout from '../layouts/BaseLayout.astro';
import { existsSync } from 'fs';
import { resolve } from 'path';
import { parse } from 'yaml';
import { marked } from 'marked';

// Get all YAML files from data directory
const dataDir = resolve(process.cwd(), '../data');
const games = [];

if (existsSync(dataDir)) {
  const fs = await import('fs');
  const files = fs.readdirSync(dataDir).filter(file => file.endsWith('.yaml'));
  
  for (const file of files) {
    try {
      const content = fs.readFileSync(resolve(dataDir, file), 'utf-8');
      const gameData = parse(content);
      if (gameData) {
        // Strip markdown from description for preview
        const cleanDescription = gameData.description ? 
          (await marked(gameData.description)).replace(/<[^>]*>/g, ' ').replace(/\s+/g, ' ').trim() :
          '';
        games.push({ ...gameData, slug: file.replace('.yaml', ''), cleanDescription });
      }
    } catch (error) {
      console.warn(`Error parsing ${file}:`, error);
    }
  }
}

// Sort games alphabetically
games.sort((a, b) => (a.name || '').localeCompare(b.name || ''));
---

<BaseLayout title="All Games">
  <div class="terminal-box">
    <h1 class="text-terminal-amber text-xl mb-4">
      ┌─ ALL ROGUELIKE GAMES ─┐
      │ {games.length} games total       │
      └───────────────────────┘
    </h1>
    
    {games.length === 0 ? (
      <div class="text-terminal-gray">
        <div class="ascii-art">
┌─────────────────────────────────┐
│ No games found in database yet  │
│                                 │
│ Add YAML files to data/         │
│ to populate the database        │
└─────────────────────────────────┘
        </div>
      </div>
    ) : (
      <div class="space-y-2">
        {games.map((game) => (
          <div class="terminal-border p-2 hover:bg-terminal-darkgray">
            <div class="flex justify-between items-start">
              <div>
                <h2 class="text-terminal-white font-bold">
                  ■ <a href={`/games/${game.slug}`} class="hover:text-terminal-amber">
                    {game.name || 'Unnamed Game'}
                  </a>
                </h2>
                <div class="text-terminal-gray text-sm ml-2">
                  {game.classification?.primary_type && (
                    <span class="text-terminal-green">[{game.classification.primary_type}]</span>
                  )}
                  {game.release_date && (
                    <span class="ml-2">{game.release_date}</span>
                  )}
                  {game.developers && game.developers.length > 0 && (
                    <span class="ml-2">by {game.developers[0]}</span>
                  )}
                </div>
                {game.cleanDescription && (
                  <p class="text-terminal-gray text-sm mt-1 ml-2 max-w-2xl">
                    {game.cleanDescription.length > 100 
                      ? `${game.cleanDescription.substring(0, 100)}...`
                      : game.cleanDescription
                    }
                  </p>
                )}
              </div>
              <div class="text-right text-terminal-gray text-xs">
                {game.platforms && game.platforms.length > 0 && (
                  <div>{game.platforms.slice(0, 3).join(', ')}</div>
                )}
                {game.classification?.subgenres && game.classification.subgenres.length > 0 && (
                  <div class="text-terminal-cyan">
                    {game.classification.subgenres.slice(0, 2).join(', ')}
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .terminal-border {
    border: 1px solid #808080;
  }
  .terminal-border:hover {
    border-color: #FFFFFF;
  }
</style>